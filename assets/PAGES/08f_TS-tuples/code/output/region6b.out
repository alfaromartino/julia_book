MethodInstance for foo(::Val{true})
  from foo(::Val{condition}) where condition @ Main ~/MEGA/WEBSITES/julia_book2/_assets/PAGES/8e_TS-tuples/code/region6b.jl:1
Static Parameters
  condition = true
Arguments
  #self#::Core.Const(foo)
  _::Core.Const(Val{true}())
Locals
  #170::var"#170#171"{Int64}
  y::Int64
  @_5::Int64
Body::Vector{Int64}
1 ─       Core.NewvarNode(:(#170))
│         Core.NewvarNode(:(y))
└──       goto #3 if not $(Expr(:static_parameter, 1))
2 ─       (@_5 = 1)
└──       goto #4
3 ─       Core.Const(:(@_5 = 0.5))
4 ┄       (y = @_5::Core.Const(1))
│   %8  = Main.:(var"#170#171")::Core.Const(var"#170#171")
│   %9  = Core.typeof(y::Core.Const(1))::Core.Const(Int64)
│   %10 = Core.apply_type(%8, %9)::Core.Const(var"#170#171"{Int64})
│         (#170 = %new(%10, y::Core.Const(1)))
│   %12 = #170::Core.Const(var"#170#171"{Int64}(1))
│   %13 = (1:100)::Core.Const(1:100)
│   %14 = Base.Generator(%12, %13)::Core.Const(Base.Generator{UnitRange{Int64}, var"#170#171"{Int64}}(var"#170#171"{Int64}(1), 1:100))
│   %15 = Base.collect(%14)::Vector{Int64}
└──       return %15

MethodInstance for foo(::Val{false})
  from foo(::Val{condition}) where condition @ Main ~/MEGA/WEBSITES/julia_book2/_assets/PAGES/8e_TS-tuples/code/region6b.jl:1
Static Parameters
  condition = false
Arguments
  #self#::Core.Const(foo)
  _::Core.Const(Val{false}())
Locals
  #170::var"#170#171"{Float64}
  y::Float64
  @_5::Float64
Body::Vector{Float64}
1 ─       Core.NewvarNode(:(#170))
│         Core.NewvarNode(:(y))
└──       goto #3 if not $(Expr(:static_parameter, 1))
2 ─       Core.Const(:(@_5 = 1))
└──       Core.Const(:(goto %7))
3 ┄       (@_5 = 0.5)
│         (y = @_5::Core.Const(0.5))
│   %8  = Main.:(var"#170#171")::Core.Const(var"#170#171")
│   %9  = Core.typeof(y::Core.Const(0.5))::Core.Const(Float64)
│   %10 = Core.apply_type(%8, %9)::Core.Const(var"#170#171"{Float64})
│         (#170 = %new(%10, y::Core.Const(0.5)))
│   %12 = #170::Core.Const(var"#170#171"{Float64}(0.5))
│   %13 = (1:100)::Core.Const(1:100)
│   %14 = Base.Generator(%12, %13)::Core.Const(Base.Generator{UnitRange{Int64}, var"#170#171"{Float64}}(var"#170#171"{Float64}(0.5), 1:100))
│   %15 = Base.collect(%14)::Vector{Float64}
└──       return %15

