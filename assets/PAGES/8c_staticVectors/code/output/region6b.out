MethodInstance for foo(::SVector{50, Float64})
  from foo(x; output) @ Main C:\Users\marti\Proton Drive\My files\WEBSITES\julia_book2\_assets\PAGES\8c_staticVectors\code\region6b.jl:4
Arguments
  #self#::Core.Const(foo)
  x::SVector{50, Float64}
Locals
  @_3::UNION{NOTHING, TUPLE{INT64, INT64}}
  output::MVector{50, Float64}
  i::Int64
  temp::SVector{50, Bool}
Body::MVector{50, Float64}
1 ─ %1  = Main.MVector::Core.Const(MVector)
│   %2  = Main.length(x)::Core.Const(50)
│   %3  = Main.eltype(x)::Core.Const(Float64)
│   %4  = Core.apply_type(%1, %2, %3)::Core.Const(MVector{50, Float64})
│         (output = (%4)(Main.undef))
│   %6  = Main.eachindex(x)::Core.Const(SOneTo(50))
│         (@_3 = Base.iterate(%6))
│   %8  = (@_3::Core.Const((1, 1)) === nothing)::Core.Const(false)
│   %9  = Base.not_int(%8)::Core.Const(true)
└──       goto #4 if not %9
2 ┄ %11 = @_3::Tuple{Int64, Int64}
│         (i = Core.getfield(%11, 1))
│   %13 = Core.getfield(%11, 2)::Int64
│   %14 = Main.:>::Core.Const(>)
│   %15 = Base.getindex(x, i)::Float64
│   %16 = Base.broadcasted(%14, x, %15)::Base.Broadcast.Broadcasted{StaticArraysCore.StaticArrayStyle{1}, Nothing, typeof(>), Tuple{SVector{50, Float64}, Float64}}
│         (temp = Base.materialize(%16))
│   %18 = Main.sum(temp)::Int64
│         Base.setindex!(output, %18, i)
│         (@_3 = Base.iterate(%6, %13))
│   %21 = (@_3 === nothing)::Bool
│   %22 = Base.not_int(%21)::Bool
└──       goto #4 if not %22
3 ─       goto #2
4 ┄       return output

