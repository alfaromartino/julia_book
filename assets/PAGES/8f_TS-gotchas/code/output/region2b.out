MethodInstance for foo(::Int64)
  from foo(x; x) @ Main C:\Users\GAMER\MEGA\WEBSITES\julia_book2\_assets\PAGES\7c_gotchas\code\region2b.jl:1
Arguments
  #self#::Core.Const(foo)
  x::Int64
Locals
  @_3::UNION{NOTHING, TUPLE{INT64, INT64}}
  bar::var"#bar#195"{Int64}
  β@_5::CORE.BOX
  i::Int64
  β@_7::Union{}
Body::ANY
1 ─       Core.NewvarNode(:(bar))
│         (β@_5 = Core.Box())
│         Core.setfield!(β@_5, :contents, 0)
│   %4  = (1:10)::Core.Const(1:10)
│         (@_3 = Base.iterate(%4))
│   %6  = (@_3::Core.Const((1, 1)) === nothing)::Core.Const(false)
│   %7  = Base.not_int(%6)::Core.Const(true)
└──       goto #7 if not %7
2 ┄ %9  = @_3::Tuple{Int64, Int64}
│         (i = Core.getfield(%9, 1))
│   %11 = Core.getfield(%9, 2)::Int64
│   %12 = Core.isdefined(β@_5, :contents)::Bool
└──       goto #4 if not %12
3 ─       goto #5
4 ─       Core.NewvarNode(:(β@_7))
└──       β@_7
5 ┄ %17 = Core.getfield(β@_5, :contents)::ANY
│   %18 = (%17 + i)::ANY
│         Core.setfield!(β@_5, :contents, %18)
│         (@_3 = Base.iterate(%4, %11))
│   %21 = (@_3 === nothing)::Bool
│   %22 = Base.not_int(%21)::Bool
└──       goto #7 if not %22
6 ─       goto #2
7 ┄ %25 = Main.:(var"#bar#195")::Core.Const(var"#bar#195")
│   %26 = Core.typeof(x)::Core.Const(Int64)
│   %27 = Core.apply_type(%25, %26)::Core.Const(var"#bar#195"{Int64})
│         (bar = %new(%27, x, β@_5))
│   %29 = (bar)()::ANY
└──       return %29

