MethodInstance for foo(::Vector{Int64}, ::Int64)
  from foo(x, N) @ Main C:\Users\GAMER\MEGA\WEBSITES\julia_book2\_assets\PAGES\7c_gotchas\code\region5e.jl:4
Arguments
  #self#::Core.Const(foo)
  x::Vector{Int64}
  N::Int64
Locals
  tuple_x::TUPLE{VARARG{INT64}}
Body::ANY
1 ─ %1 = Main.NTuple::Core.Const(Tuple{Vararg{T, N}} where {N, T})
│   %2 = Main.eltype(x)::Core.Const(Int64)
│   %3 = Core.apply_type(%1, N, %2)::TYPE{TUPLE{VARARG{INT64, _A}}} WHERE _A
│        (tuple_x = (%3)(x))
│   %5 = Base.broadcasted(Main.:+, 2, tuple_x)::BASE.BROADCAST.BROADCASTED{BASE.BROADCAST.STYLE{TUPLE}, NOTHING, TYPEOF(+), <:TUPLE{INT64, TUPLE{VARARG{INT64}}}}
│   %6 = Base.materialize(%5)::ANY
└──      return %6

