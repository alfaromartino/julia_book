MethodInstance for foo(::Tuple{Int64, Int64, Int64})
  from foo(x) @ Main ~/MEGA/WEBSITES/julia_book2/_assets/PAGES/8d_TS-tuples/code/region05e.jl:3
Arguments
  #self#::Core.Const(foo)
  x::Tuple{Int64, Int64, Int64}
Locals
  tup::Tuple{Int64, Int64, Int64}
Body::Int64
1 ─ %1 = Main.NTuple::Core.Const(Tuple{Vararg{T, N}} where {N, T})
│   %2 = Main.eltype(x)::Core.Const(Int64)
│   %3 = Core.apply_type(%1, 3, %2)::Core.Const(Tuple{Int64, Int64, Int64})
│        (tup = (%3)(x))
│   %5 = Main.sum(tup)::Int64
└──      return %5

