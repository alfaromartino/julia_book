MethodInstance for foo(::Bool)
  from foo(condition) @ Main ~/MEGA/WEBSITES/julia_book2/_assets/PAGES/8d_TS-tuples/code/region6a.jl:1
Arguments
  #self#::Core.Const(foo)
  condition::Bool
Locals
  #71::VAR"#71#72"
  y::UNION{FLOAT64, INT64}
  @_5::UNION{FLOAT64, INT64}
Body::VECTOR
1 ─       Core.NewvarNode(:(#71))
│         Core.NewvarNode(:(y))
└──       goto #3 if not condition
2 ─       (@_5 = 1)
└──       goto #4
3 ─       (@_5 = 0.5)
4 ┄       (y = @_5)
│   %8  = Main.:(var"#71#72")::Core.Const(var"#71#72")
│   %9  = Core.typeof(y)::UNION{TYPE{FLOAT64}, TYPE{INT64}}
│   %10 = Core.apply_type(%8, %9)::TYPE{VAR"#71#72"{_A}} WHERE _A
│         (#71 = %new(%10, y))
│   %12 = #71::VAR"#71#72"
│   %13 = (1:100)::Core.Const(1:100)
│   %14 = Base.Generator(%12, %13)::BASE.GENERATOR{UNITRANGE{INT64}, F} WHERE F<:VAR"#71#72"
│   %15 = Base.collect(%14)::VECTOR
└──       return %15

MethodInstance for foo(::Bool)
  from foo(condition) @ Main ~/MEGA/WEBSITES/julia_book2/_assets/PAGES/8d_TS-tuples/code/region6a.jl:1
Arguments
  #self#::Core.Const(foo)
  condition::Bool
Locals
  #71::VAR"#71#72"
  y::UNION{FLOAT64, INT64}
  @_5::UNION{FLOAT64, INT64}
Body::VECTOR
1 ─       Core.NewvarNode(:(#71))
│         Core.NewvarNode(:(y))
└──       goto #3 if not condition
2 ─       (@_5 = 1)
└──       goto #4
3 ─       (@_5 = 0.5)
4 ┄       (y = @_5)
│   %8  = Main.:(var"#71#72")::Core.Const(var"#71#72")
│   %9  = Core.typeof(y)::UNION{TYPE{FLOAT64}, TYPE{INT64}}
│   %10 = Core.apply_type(%8, %9)::TYPE{VAR"#71#72"{_A}} WHERE _A
│         (#71 = %new(%10, y))
│   %12 = #71::VAR"#71#72"
│   %13 = (1:100)::Core.Const(1:100)
│   %14 = Base.Generator(%12, %13)::BASE.GENERATOR{UNITRANGE{INT64}, F} WHERE F<:VAR"#71#72"
│   %15 = Base.collect(%14)::VECTOR
└──       return %15

