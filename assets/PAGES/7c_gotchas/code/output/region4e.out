MethodInstance for foo(::Vector{Vector})
  from foo(data) @ Main C:\Users\marti\MEGA\WEBSITES\julia_book2\_assets\PAGES\7c_gotchas\code\region4e.jl:6
Arguments
  #self#::Core.Const(foo)
  data::Vector{Vector}
Locals
  @_3::UNION{NOTHING, TUPLE{INT64, INT64}}
  i::Int64
Body::Nothing
1 ─ %1  = Base.getindex(data, 2)::VECTOR
│   %2  = Main.eachindex(%1)::Base.OneTo{Int64}
│         (@_3 = Base.iterate(%2))
│   %4  = (@_3 === nothing)::Bool
│   %5  = Base.not_int(%4)::Bool
└──       goto #4 if not %5
2 ┄ %7  = @_3::Tuple{Int64, Int64}
│         (i = Core.getfield(%7, 1))
│   %9  = Core.getfield(%7, 2)::Int64
│   %10 = Base.getindex(data, 2)::VECTOR
│         Main.operation!(%10, i)
│         (@_3 = Base.iterate(%2, %9))
│   %13 = (@_3 === nothing)::Bool
│   %14 = Base.not_int(%13)::Bool
└──       goto #4 if not %14
3 ─       goto #2
4 ┄       return nothing

